// Создать 2 массива, в одном из которых будут храниться единицы земельных участков, приносящих плоды, в другом - сами плоды.

var farm = [];
var harvest = [];


//  a. Написать функцию, аргументами которой будут: название участка, название производимого ресурса, количество единиц
// прироста при готовности сбора ресурсов, изношенность ЗР (земельного ресурса), флагом засеянности (засеян/нет)
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean.                            ???
//  Функция должна создавать объект и добавлять его в массив земельных участков.
//      function adds resources to farm ------------------------------------------------------------------

function addResourceToFarm (type, product, cropYield, durability, seed) {
    var obj = {
        "type": type,
        "product": product,
        "cropYield": cropYield,
        "durability": durability,
        "seed": seed
    };
    farm.push(obj);
}

//  `b. Написать функцию проверки готовности каждой, либо указанной (индекс) единицы ЗР для сборки.
//  ???  Что влияет на готовность? Время? Откуда его брать? Установить для каждого участка? Или для каждого плода?      ???


//  c. Написать функцию вывода информации о количестве единиц плодов, сгенерированных данным ЗР.
//      function returns quantity of products generated by this land resource or by the whole farm ---------

function productsFromResource(index) {
    if (index === undefined) {
        return farm.reduce(function(prevVal, curVal) {
            return prevVal + curVal.cropYield;
        }, 0)
    }
    else {
        var obj = farm[index];
        return obj.cropYield;
    }
}


//  d. Написать функцию проверки всех / каждого ЗР на готовность к следующему посеву.
//      function check, if ready index-th (or all) resource for planting or not.  --------------------------

function isReadyForPlanting(index) {
    if (index || index === 0) {
        var obj = farm[index];
        return !obj.seed;
    }
    else {
        return farm.every(function(obj){return !obj.seed;});
    }
}

function messageIsReadyForPlanting(index) {
    return isReadyForPlanting(index)? "You can planting there.": "You can't planting there yet."
}


//  e. Написать функцию сбора плодов. При сборе объект ЗР должен обновляться ( ЗР не засеян и т.д. ) и дополняться
// массив плодов соответствующими объектами.
//      function gets harvest from index-th resource and puts it to array "harvest".  -----------------------

function getHarvest(index) {
    var obj = farm[index];
    var exist = harvest.find(function (element){return element.product === obj.product});
    if (!obj.seed){
        return console.log("The pane was not seeded");
    }
    else if (exist){
        exist.quantity += obj.cropYield;
        obj.seed = false;
    }
    else {
        var newObj = {
            "product": obj.product,
            "quantity": obj.cropYield
        };
        harvest.push(newObj);
        obj.seed = false;
    }
}


//  f. Написать функцию, которая “сеет семена” на ЗР. (не забываем обновлять изношенность)
//      function sows seeds in index-th resource and reduce durability -------------------------------------

function sowSeeds(index) {
    var obj = farm[index];
    if (obj.seed){
        return console.log("The pane was already seeded");
    }
    else {
        obj.seed = true;
        obj.durability --;
    }
}


//--------------- check farm ----------------------------------------------------------------------------
addResourceToFarm("pane", "apple", 200, 5, false);
addResourceToFarm("pane", "carrot", 100, 10, false);
addResourceToFarm("pane", "cucumber", 150, 10, true);

console.log(farm);

console.log(productsFromResource(2));
console.log(productsFromResource());

console.log(messageIsReadyForPlanting(1));
console.log(messageIsReadyForPlanting());

getHarvest(1);
sowSeeds(2);
getHarvest(2);
console.log(harvest);
sowSeeds(0);
sowSeeds(1);

getHarvest(0);
getHarvest(1);
sowSeeds(2);
getHarvest(2);
sowSeeds(0);
getHarvest(0);
getHarvest(2);

